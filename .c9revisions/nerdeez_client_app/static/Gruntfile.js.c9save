{"ts":1374211389283,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated on 2013-07-12 using generator-ember 0.3.1\n'use strict';\nvar lrSnippet = require('grunt-contrib-livereload/lib/utils').livereloadSnippet;\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n    // load all grunt tasks\n    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n\n    // configurable paths\n    var yeomanConfig = {\n        app: 'app',\n        dist: 'dist'\n    };\n\n    grunt.initConfig({\n        yeoman: yeomanConfig,\n        watch: {\n            emberTemplates: {\n                files: '<%= yeoman.app %>/templates/**/*.hbs',\n                tasks: ['emberTemplates', 'livereload']\n            },\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            compass: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n                tasks: ['compass:server']\n            },\n            neuter: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],\n                tasks: ['neuter', 'livereload']\n            },\n            livereload: {\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '{.tmp,<%= yeoman.app %>}/styles/{,*/}*.css',\n                    '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n                ],\n                tasks: ['livereload']\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            lrSnippet,\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'app')\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test')\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, 'dist')\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n        coffee: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/scripts',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/scripts',\n                    ext: '.js'\n                }]\n            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: 'test/spec',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/spec',\n                    ext: '.js'\n                }]\n            }\n        },\n        compass: {\n            options: {\n                sassDir: '<%= yeoman.app %>/styles',\n                cssDir: '.tmp/styles',\n                generatedImagesDir: '.tmp/images/generated',\n                imagesDir: '<%= yeoman.app %>/images',\n                javascriptsDir: '<%= yeoman.app %>/scripts',\n                fontsDir: '<%= yeoman.app %>/styles/fonts',\n                importPath: 'app/bower_components',\n                httpImagesPath: '/images',\n                httpGeneratedImagesPath: '/images/generated',\n                httpFontsPath: '/styles/fonts',\n                relativeAssets: false\n            },\n            dist: {},\n            server: {\n                options: {\n                    debugInfo: true\n                }\n            }\n        },\n        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n        // not enabled since usemin task does concat and uglify\n        // check index.html to edit your build targets\n        // enable this task if you prefer defining your build targets here\n        /*uglify: {\n            dist: {}\n        },*/\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/*'\n                    ]\n                }\n            }\n        },\n        useminPrepare: {\n            html: '<%= yeoman.app %>/index.html',\n            options: {\n                dest: '<%= yeoman.dist %>'\n            }\n        },\n        usemin: {\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n            }\n        },\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{png,jpg,jpeg}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        cssmin: {\n            dist: {\n                files: {\n                    '<%= yeoman.dist %>/styles/main.css': [\n                        '.tmp/styles/{,*/}*.css',\n                        '<%= yeoman.app %>/styles/{,*/}*.css'\n                    ]\n                }\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n        // Put files not handled in other tasks here\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.{webp,gif}',\n                        'styles/fonts/*'\n                    ]\n                }]\n            }\n        },\n        concurrent: {\n            server: [\n                'emberTemplates',\n                'coffee:dist',\n                'compass:server'\n            ],\n            test: [\n                'coffee',\n                'compass'\n            ],\n            dist: [\n                'emberTemplates',\n                'coffee',\n                'compass:dist',\n                'imagemin',\n                'svgmin',\n                'htmlmin'\n            ]\n        },\n        emberTemplates: {\n            options: {\n                templateName: function (sourceFile) {\n                    var templatePath = yeomanConfig.app + '/templates/';\n                    return sourceFile.replace(templatePath, '');\n                }\n            },\n            dist: {\n                files: {\n                    '.tmp/scripts/compiled-templates.js': '<%= yeoman.app %>/templates/{,*/}*.hbs'\n                }\n            }\n        },\n        neuter: {\n            app: {\n                options: {\n                    filepathTransform: function (filepath) {\n                        return 'app/' + filepath;\n                    }\n                },\n                src: '<%= yeoman.app %>/scripts/app.js',\n                dest: '.tmp/scripts/combined-scripts.js'\n            }\n        }\n    });\n\n    grunt.renameTask('regarde', 'watch');\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'concurrent:server',\n            'neuter:app',\n            'livereload-start',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'concurrent:test',\n        'neuter:app',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'useminPrepare',\n        'concurrent:dist',\n        'neuter:app',\n        'concat',\n        'cssmin',\n        'uglify',\n        'copy',\n        'rev',\n        'usemin'\n    ]);\n\n    grunt.registerTask('default', [\n        'jshint',\n        'test',\n        'build'\n    ]);\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":11024}]],"length":11024}
{"contributors":[],"silentsave":true,"ts":1374211497164,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"port: 90"]],"start1":1859,"start2":1859,"length1":16,"length2":18}]],"length":11026,"saved":false}
{"ts":1374211498960,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"hostname"]],"start1":1967,"start2":1967,"length1":16,"length2":18}]],"length":11028,"saved":false}
{"ts":1374211579432,"patch":[[{"diffs":[[0,": 9000,\n"],[1,"                port\n"],[0,"        "]],"start1":1873,"start2":1873,"length1":16,"length2":37}]],"length":11049,"saved":false}
{"ts":1374211582249,"patch":[[{"diffs":[[0,"    port"],[1,":  Gruntfile.js"],[0,"\n       "]],"start1":1893,"start2":1893,"length1":16,"length2":31}]],"length":11064,"saved":false}
{"ts":1374211583369,"patch":[[{"diffs":[[0,"ntfile.j"],[-1,"s"],[0,"\n       "]],"start1":1907,"start2":1907,"length1":17,"length2":16}]],"length":11063,"saved":false}
{"ts":1374211588152,"patch":[[{"diffs":[[0," port:  "],[-1,"Gruntfile.j"],[1,"process"],[0,"\n       "]],"start1":1896,"start2":1896,"length1":27,"length2":23}]],"length":11059,"saved":false}
{"ts":1374211590556,"patch":[[{"diffs":[[0," process"],[1,".env.PO"],[0,"\n       "]],"start1":1903,"start2":1903,"length1":16,"length2":23}]],"length":11066,"saved":false}
{"ts":1374211592955,"patch":[[{"diffs":[[0,"s.env.PO"],[1,"RT"],[0,"\n       "]],"start1":1910,"start2":1910,"length1":16,"length2":18}]],"length":11068,"saved":false}
{"ts":1374211595532,"patch":[[{"diffs":[[0,"env.PORT"],[1,","],[0,"\n       "]],"start1":1912,"start2":1912,"length1":16,"length2":17}]],"length":11069,"saved":false}
{"ts":1374211619984,"patch":[[{"diffs":[[0,"00,\n"],[-1,"                port:  process.env.PORT,\n"],[0,"    "]],"start1":1877,"start2":1877,"length1":49,"length2":8}]],"length":11028,"saved":false}
{"ts":1374211622304,"patch":[[{"diffs":[[0,"'localhost'\n"],[1,"                port:  process.env.PORT,\n"],[0,"            "]],"start1":1987,"start2":1987,"length1":24,"length2":65}]],"length":11069,"saved":false}
{"ts":1374211623011,"patch":[[{"diffs":[[0,"v.PORT,\n"],[1,"                \n"],[0,"        "]],"start1":2032,"start2":2032,"length1":16,"length2":33}]],"length":11086,"saved":false}
{"ts":1374211626603,"patch":[[{"diffs":[[0,"        "],[1,"hostname: "],[0,"\n       "]],"start1":2048,"start2":2048,"length1":16,"length2":26}]],"length":11096,"saved":false}
{"ts":1374211629312,"patch":[[{"diffs":[[0,"stname: "],[1,"process."],[0,"\n       "]],"start1":2058,"start2":2058,"length1":16,"length2":24}]],"length":11104,"saved":false}
{"ts":1374211632675,"patch":[[{"diffs":[[0,"process."],[1,"env"],[0,"\n       "]],"start1":2066,"start2":2066,"length1":16,"length2":19}]],"length":11107,"saved":false}
{"ts":1374211634256,"patch":[[{"diffs":[[0,"cess.env"],[1,".IP"],[0,"\n       "]],"start1":2069,"start2":2069,"length1":16,"length2":19}]],"length":11110,"saved":false}
{"ts":1374211867195,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"path: 'h"]],"start1":3128,"start2":3128,"length1":16,"length2":18},{"diffs":[[0,"ns.port %>'\n"],[1,"                \n"],[0,"            "]],"start1":3179,"start2":3179,"length1":24,"length2":41}]],"length":11129,"saved":false}
{"ts":1374211867803,"patch":[[{"diffs":[[0,"        "],[1,"pat"],[0,"\n       "]],"start1":3199,"start2":3199,"length1":16,"length2":19}]],"length":11132,"saved":false}
{"ts":1374211868981,"patch":[[{"diffs":[[0,"     pat"],[1,"h"],[0,"\n       "]],"start1":3202,"start2":3202,"length1":16,"length2":17}]],"length":11133,"saved":false}
{"ts":1374211880003,"patch":[[{"diffs":[[0,"    path"],[1,": ''"],[0,"\n       "]],"start1":3203,"start2":3203,"length1":16,"length2":20}]],"length":11137,"saved":false}
{"ts":1374211881716,"patch":[[{"diffs":[[0," path: '"],[1,"http:"],[0,"'\n      "]],"start1":3206,"start2":3206,"length1":16,"length2":21}]],"length":11142,"saved":false}
{"ts":1374211883245,"patch":[[{"diffs":[[0,": 'http:"],[1,"//"],[0,"'\n      "]],"start1":3211,"start2":3211,"length1":16,"length2":18}]],"length":11144,"saved":false}
{"ts":1374211887630,"patch":[[{"diffs":[[0,"http://'"],[1," + "],[0,"\n       "]],"start1":3214,"start2":3214,"length1":16,"length2":19}]],"length":11147,"saved":false}
{"ts":1374211890519,"patch":[[{"diffs":[[0,"p://' + "],[1,"process.e"],[0,"\n       "]],"start1":3217,"start2":3217,"length1":16,"length2":25}]],"length":11156,"saved":false}
{"ts":1374211891967,"patch":[[{"diffs":[[0,"rocess.e"],[1,"nv.I"],[0,"\n       "]],"start1":3226,"start2":3226,"length1":16,"length2":20}]],"length":11160,"saved":false}
{"ts":1374211892578,"patch":[[{"diffs":[[0,"ss.env.I"],[1,"P"],[0,"\n       "]],"start1":3230,"start2":3230,"length1":16,"length2":17}]],"length":11161,"saved":false}
{"ts":1374211896331,"patch":[[{"diffs":[[0,"+ process.env.IP"],[1," + ''"],[0,"\n            }\n "]],"start1":3223,"start2":3223,"length1":32,"length2":37}]],"length":11166,"saved":false}
{"ts":1374211896958,"patch":[[{"diffs":[[0,"v.IP + '"],[1,":"],[0,"'\n      "]],"start1":3235,"start2":3235,"length1":16,"length2":17}]],"length":11167,"saved":false}
{"ts":1374211899905,"patch":[[{"diffs":[[0,"IP + ':'"],[1," + "],[0,"\n       "]],"start1":3237,"start2":3237,"length1":16,"length2":19}]],"length":11170,"saved":false}
{"ts":1374211902571,"patch":[[{"diffs":[[0,"+ ':' + "],[1,"process."],[0,"\n       "]],"start1":3240,"start2":3240,"length1":16,"length2":24}]],"length":11178,"saved":false}
{"ts":1374211904813,"patch":[[{"diffs":[[0,"process."],[1,"env.PO"],[0,"\n       "]],"start1":3248,"start2":3248,"length1":16,"length2":22}]],"length":11184,"saved":false}
{"ts":1374211906326,"patch":[[{"diffs":[[0,"s.env.PO"],[1,"RT"],[0,"\n       "]],"start1":3254,"start2":3254,"length1":16,"length2":18}]],"length":11186,"saved":false}
{"ts":1374212304464,"patch":[[{"diffs":[[0,"cess.env"],[-1,".PORT"],[0,"\n       "]],"start1":3251,"start2":3251,"length1":21,"length2":16}]],"length":11181,"saved":false}
{"ts":1374212317312,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"port: 90"]],"start1":1859,"start2":1859,"length1":18,"length2":16},{"diffs":[[0,": 9000,\n"],[1,""],[0,"        "]],"start1":1871,"start2":1871,"length1":16,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"hostname"]],"start1":1965,"start2":1965,"length1":18,"length2":16},{"diffs":[[0,"st'\n"],[-1,"                port:  process.env.PORT,\n                hostname: process.env.IP\n"],[0,"    "]],"start1":1991,"start2":1991,"length1":90,"length2":8},{"diffs":[[0,"        "],[-1,"//"],[0,"path: 'h"]],"start1":3042,"start2":3042,"length1":18,"length2":16},{"diffs":[[0,"%>'\n"],[-1,"                path: 'http://' + process.env.IP + ':' + process.env\n"],[0,"    "]],"start1":3099,"start2":3099,"length1":77,"length2":8}]],"length":11024,"saved":false}
{"ts":1374212365137,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"port: 90"]],"start1":1859,"start2":1859,"length1":16,"length2":18},{"diffs":[[0,"        "],[1,"/"],[0,"hostname"]],"start1":1967,"start2":1967,"length1":16,"length2":17}]],"length":11027,"saved":false}
{"ts":1374212372241,"patch":[[{"diffs":[[0,"        "],[1,"/"],[0,"/hostnam"]],"start1":1967,"start2":1967,"length1":16,"length2":17},{"diffs":[[0,"'localhost'\n"],[1,"                \n"],[0,"            "]],"start1":1987,"start2":1987,"length1":24,"length2":41}]],"length":11045,"saved":false}
{"ts":1374212373473,"patch":[[{"diffs":[[0,"        "],[1,"port:  process.env.PORT,\n                ho"],[0,"\n       "]],"start1":2007,"start2":2007,"length1":16,"length2":59}]],"length":11088,"saved":false}
{"ts":1374212375866,"patch":[[{"diffs":[[0,"      ho"],[1,"stname: process"],[0,"\n       "]],"start1":2050,"start2":2050,"length1":16,"length2":31}]],"length":11103,"saved":false}
{"ts":1374212377813,"patch":[[{"diffs":[[0," process"],[1,".env.IP"],[0,"\n       "]],"start1":2065,"start2":2065,"length1":16,"length2":23},{"diffs":[[0,"        "],[1,"//"],[0,"path: 'h"]],"start1":3128,"start2":3128,"length1":16,"length2":18}]],"length":11112,"saved":false}
{"ts":1374212380001,"patch":[[{"diffs":[[0,"ss.env.I"],[-1,"P"],[0,"\n       "]],"start1":2071,"start2":2071,"length1":17,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"path: 'h"]],"start1":3127,"start2":3127,"length1":18,"length2":16}]],"length":11109,"saved":false}
{"ts":1374212382226,"patch":[[{"diffs":[[0,"ss.env.I"],[1,"P"],[0,"\n       "]],"start1":2071,"start2":2071,"length1":16,"length2":17}]],"length":11110,"saved":false}
